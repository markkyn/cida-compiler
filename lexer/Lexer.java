/* This file was generated by SableCC (http://www.sablecc.org/). */

package cida.lexer;

import java.io.*;
import cida.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 60:
                        {
                            @SuppressWarnings("hiding") Token token = new60(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 61:
                        {
                            @SuppressWarnings("hiding") Token token = new61(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 62:
                        {
                            @SuppressWarnings("hiding") Token token = new62(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 63:
                        {
                            @SuppressWarnings("hiding") Token token = new63(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 64:
                        {
                            @SuppressWarnings("hiding") Token token = new64(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 65:
                        {
                            @SuppressWarnings("hiding") Token token = new65(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 66:
                        {
                            @SuppressWarnings("hiding") Token token = new66(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIntT(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRealT(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRecebe(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAnswerT(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumberT(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSymbolT(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringT(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVectorT(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCode(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStart(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFinish(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentificador(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUnalterable(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAlterable(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShow(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCapture(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVirgula(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPonto(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAdd(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSub(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMul(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaior(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorIgual(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenor(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorIgual(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIgualA(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiferenteA(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNot(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOr(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TXor(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAnd(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAs(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLong(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIn(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCase(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThat(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOtherwise(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDo(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConsidering(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFrom(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTo(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBy(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParEsq(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParDir(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TChaveEsq(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TChaveDir(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlocEsq(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlocDir(line, pos); }
    Token new50(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVazio(text, line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEndCommand(line, pos); }
    Token new52(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommentLine(text, line, pos); }
    Token new53(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommentBlock(text, line, pos); }
    Token new54(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTrue(line, pos); }
    Token new55(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalse(line, pos); }
    Token new56(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSymbol(text, line, pos); }
    Token new57(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }
    Token new58(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(text, line, pos); }
    Token new59(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInteiro(text, line, pos); }
    Token new60(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReal(text, line, pos); }
    Token new61(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAuxLocalVirgula(text, line, pos); }
    Token new62(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAuxExprVirgula(text, line, pos); }
    Token new63(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAuxBlocExprBloc(text, line, pos); }
    Token new64(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAuxRecbeExpr(text, line, pos); }
    Token new65(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAuxOtherwiseDecCasam(text, line, pos); }
    Token new66(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAuxOtherwiseDecSemCasam(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {33, 33, 5}, {34, 34, 6}, {37, 37, 7}, {39, 39, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {46, 46, 15}, {47, 47, 16}, {48, 57, 17}, {60, 60, 18}, {61, 61, 19}, {62, 62, 20}, {65, 90, 21}, {91, 91, 22}, {93, 93, 23}, {97, 97, 24}, {98, 98, 25}, {99, 99, 26}, {100, 100, 27}, {101, 101, 28}, {102, 102, 29}, {103, 104, 30}, {105, 105, 31}, {106, 107, 30}, {108, 108, 32}, {109, 109, 30}, {110, 110, 33}, {111, 111, 34}, {112, 113, 30}, {114, 114, 35}, {115, 115, 36}, {116, 116, 37}, {117, 117, 38}, {118, 118, 39}, {119, 119, 30}, {120, 120, 40}, {121, 121, 41}, {122, 122, 30}, {123, 123, 42}, {125, 125, 43}, },
            {{9, 13, -2}, {32, 32, 44}, },
            {{9, 32, -3}, },
            {{9, 32, -3}, },
            {{9, 32, -3}, {111, 111, 45}, },
            {{61, 61, 46}, },
            {{32, 32, 47}, {33, 33, 48}, {34, 34, 49}, {35, 64, 48}, {65, 90, 50}, {91, 96, 48}, {97, 122, 51}, {123, 255, 48}, },
            {},
            {{33, 255, 52}, },
            {},
            {},
            {},
            {},
            {},
            {{45, 45, 53}, },
            {},
            {},
            {{46, 46, 54}, {48, 57, 17}, },
            {{60, 60, 55}, {61, 61, 56}, },
            {{61, 61, 57}, },
            {{61, 61, 58}, },
            {{65, 90, 21}, {97, 122, 30}, },
            {{32, 32, 59}, {101, 101, 60}, },
            {},
            {{65, 90, 21}, {97, 107, 30}, {108, 108, 61}, {109, 109, 30}, {110, 110, 62}, {111, 114, 30}, {115, 115, 63}, {116, 122, 30}, },
            {{65, 90, 21}, {97, 120, 30}, {121, 121, 64}, {122, 122, 30}, },
            {{65, 90, 21}, {97, 97, 65}, {98, 110, 30}, {111, 111, 66}, {112, 122, 30}, },
            {{65, 90, 21}, {97, 110, 30}, {111, 111, 67}, {112, 122, 30}, },
            {{65, 90, 21}, {97, 119, 30}, {120, 120, 68}, {121, 122, 30}, },
            {{65, 90, 21}, {97, 104, 30}, {105, 105, 69}, {106, 113, 30}, {114, 114, 70}, {115, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 90, 21}, {97, 99, 30}, {100, 100, 71}, {101, 109, 30}, {110, 110, 72}, {111, 122, 30}, },
            {{65, 110, -29}, {111, 111, 73}, {112, 122, 30}, },
            {{65, 110, -29}, {111, 111, 74}, {112, 116, 30}, {117, 117, 75}, {118, 122, 30}, },
            {{65, 90, 21}, {97, 113, 30}, {114, 114, 76}, {115, 115, 30}, {116, 116, 77}, {117, 122, 30}, },
            {{65, 90, 21}, {97, 100, 30}, {101, 101, 78}, {102, 122, 30}, },
            {{65, 90, 21}, {97, 103, 30}, {104, 104, 79}, {105, 115, 30}, {116, 116, 80}, {117, 120, 30}, {121, 121, 81}, {122, 122, 30}, },
            {{65, 103, -38}, {104, 104, 82}, {105, 110, 30}, {111, 111, 83}, {112, 122, 30}, },
            {{65, 90, 21}, {97, 109, 30}, {110, 110, 84}, {111, 122, 30}, },
            {{65, 100, -37}, {101, 101, 85}, {102, 122, 30}, },
            {{65, 110, -29}, {111, 111, 86}, {112, 122, 30}, },
            {{65, 100, -37}, {101, 101, 87}, {102, 122, 30}, },
            {},
            {},
            {{9, 32, -3}, },
            {{116, 116, 88}, },
            {},
            {{32, 255, -8}, },
            {{32, 255, -8}, },
            {{32, 255, -8}, },
            {{32, 255, -8}, },
            {{32, 255, -8}, },
            {{39, 39, 89}, },
            {{9, 9, 90}, {10, 10, 91}, {13, 13, 92}, {32, 32, 93}, {33, 44, 94}, {45, 45, 95}, {46, 47, 94}, {48, 57, 96}, {58, 64, 94}, {65, 90, 97}, {91, 96, 94}, {97, 122, 98}, {123, 255, 94}, },
            {{48, 57, 99}, },
            {{32, 32, 100}, {101, 101, 101}, },
            {},
            {},
            {},
            {{32, 101, -24}, },
            {{120, 120, 102}, },
            {{65, 90, 21}, {97, 115, 30}, {116, 116, 103}, {117, 122, 30}, },
            {{65, 99, -33}, {100, 100, 104}, {101, 114, 30}, {115, 115, 105}, {116, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 122, -23}, },
            {{65, 90, 21}, {97, 111, 30}, {112, 112, 106}, {113, 114, 30}, {115, 115, 107}, {116, 122, 30}, },
            {{65, 99, -33}, {100, 100, 108}, {101, 109, 30}, {110, 110, 109}, {111, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 111, -67}, {112, 112, 110}, {113, 122, 30}, },
            {{65, 109, -40}, {110, 110, 111}, {111, 122, 30}, },
            {{65, 110, -29}, {111, 111, 112}, {112, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 115, -63}, {116, 116, 113}, {117, 122, 30}, },
            {{65, 90, 21}, {97, 98, 30}, {99, 99, 114}, {100, 109, 30}, {110, 110, 115}, {111, 122, 30}, },
            {{65, 115, -63}, {116, 116, 116}, {117, 122, 30}, },
            {{65, 90, 21}, {97, 108, 30}, {109, 109, 117}, {110, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 103, -38}, {104, 104, 118}, {105, 122, 30}, },
            {{65, 90, 21}, {97, 97, 119}, {98, 122, 30}, },
            {{65, 110, -29}, {111, 111, 120}, {112, 122, 30}, },
            {{65, 90, 21}, {97, 97, 121}, {98, 113, 30}, {114, 114, 122}, {115, 122, 30}, },
            {{65, 108, -77}, {109, 109, 123}, {110, 122, 30}, },
            {{65, 90, 21}, {97, 97, 124}, {98, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 90, 21}, {97, 97, 125}, {98, 122, 30}, },
            {{65, 98, -75}, {99, 99, 126}, {100, 122, 30}, },
            {{65, 113, -36}, {114, 114, 127}, {115, 122, 30}, },
            {{65, 90, 21}, {97, 114, 30}, {115, 115, 128}, {116, 122, 30}, },
            {{104, 104, 129}, },
            {},
            {{9, 255, -55}, },
            {{9, 9, 130}, {10, 10, 131}, {13, 13, 132}, {32, 32, 133}, {45, 45, 134}, {48, 57, 135}, {65, 90, 136}, {97, 122, 137}, },
            {{9, 9, 130}, {10, 10, 138}, {13, 122, -93}, },
            {{9, 255, -55}, },
            {{9, 9, 139}, {10, 10, 140}, {13, 13, 141}, {32, 32, 142}, {33, 47, 94}, {48, 57, 143}, {58, 64, 94}, {65, 90, 144}, {91, 96, 94}, {97, 122, 145}, {123, 255, 94}, },
            {{9, 32, -96}, {33, 44, 94}, {45, 45, 146}, {46, 47, 94}, {48, 255, -96}, },
            {{9, 255, -55}, },
            {{9, 255, -55}, },
            {{9, 255, -55}, },
            {{48, 57, 99}, },
            {{32, 101, -57}, },
            {{120, 120, 147}, },
            {{112, 112, 148}, },
            {{65, 100, -37}, {101, 101, 149}, {102, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 90, 21}, {97, 118, 30}, {119, 119, 150}, {120, 122, 30}, },
            {{65, 115, -63}, {116, 116, 151}, {117, 122, 30}, },
            {{65, 100, -37}, {101, 101, 152}, {102, 122, 30}, },
            {{65, 100, -37}, {101, 101, 153}, {102, 122, 30}, },
            {{65, 114, -89}, {115, 115, 154}, {116, 122, 30}, },
            {{65, 113, -36}, {114, 114, 155}, {115, 122, 30}, },
            {{65, 104, -31}, {105, 105, 156}, {106, 122, 30}, },
            {{65, 108, -77}, {109, 109, 157}, {110, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 90, 21}, {97, 97, 158}, {98, 122, 30}, },
            {{65, 90, 21}, {97, 102, 30}, {103, 103, 159}, {104, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 90, 21}, {97, 97, 30}, {98, 98, 160}, {99, 122, 30}, },
            {{65, 100, -37}, {101, 101, 161}, {102, 122, 30}, },
            {{65, 107, -26}, {108, 108, 162}, {109, 122, 30}, },
            {{65, 118, -107}, {119, 119, 163}, {120, 122, 30}, },
            {{65, 113, -36}, {114, 114, 164}, {115, 122, 30}, },
            {{65, 104, -31}, {105, 105, 165}, {106, 122, 30}, },
            {{65, 97, -119}, {98, 98, 166}, {99, 122, 30}, },
            {{65, 115, -63}, {116, 116, 167}, {117, 122, 30}, },
            {{65, 107, -26}, {108, 108, 168}, {109, 122, 30}, },
            {{65, 115, -63}, {116, 116, 169}, {117, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 122, -23}, },
            {{101, 101, 170}, },
            {{9, 122, -93}, },
            {{9, 122, -93}, },
            {{9, 122, -93}, },
            {{9, 122, -93}, },
            {{45, 45, 171}, },
            {{9, 122, -93}, },
            {{9, 122, -93}, },
            {{9, 122, -93}, },
            {{9, 122, -93}, },
            {{9, 255, -96}, },
            {},
            {{10, 10, 172}, },
            {{9, 255, -96}, },
            {{9, 255, -96}, },
            {{9, 255, -96}, },
            {{9, 255, -96}, },
            {{9, 255, -96}, },
            {{112, 112, 173}, },
            {{114, 114, 174}, },
            {{65, 113, -36}, {114, 114, 175}, {115, 122, 30}, },
            {{65, 100, -37}, {101, 101, 176}, {102, 122, 30}, },
            {{65, 90, 21}, {97, 116, 30}, {117, 117, 177}, {118, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 122, -23}, },
            {{65, 104, -31}, {105, 105, 178}, {106, 122, 30}, },
            {{32, 32, 179}, {44, 44, 180}, {65, 122, -23}, },
            {{65, 114, -89}, {115, 115, 181}, {116, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 107, -26}, {108, 108, 182}, {109, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 100, -37}, {101, 101, 183}, {102, 122, 30}, },
            {{65, 113, -36}, {114, 114, 184}, {115, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 122, -23}, },
            {{65, 115, -63}, {116, 116, 185}, {117, 122, 30}, },
            {{65, 109, -40}, {110, 110, 186}, {111, 122, 30}, },
            {{65, 110, -29}, {111, 111, 187}, {112, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 115, -63}, {116, 116, 188}, {117, 122, 30}, },
            {{65, 110, -29}, {111, 111, 189}, {112, 122, 30}, },
            {{114, 114, 190}, },
            {},
            {},
            {{114, 114, 191}, },
            {{32, 32, 192}, {93, 93, 193}, },
            {{65, 90, 21}, {97, 97, 194}, {98, 122, 30}, },
            {{65, 113, -36}, {114, 114, 195}, {115, 122, 30}, },
            {{65, 113, -36}, {114, 114, 196}, {115, 122, 30}, },
            {{65, 99, -33}, {100, 100, 197}, {101, 122, 30}, },
            {{32, 44, -157}, },
            {},
            {{65, 103, -38}, {104, 104, 198}, {105, 122, 30}, },
            {{32, 32, 199}, {44, 44, 200}, {65, 122, -23}, },
            {{65, 113, -36}, {114, 114, 201}, {115, 122, 30}, },
            {{65, 118, -107}, {119, 119, 202}, {120, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 102, -117}, {103, 103, 203}, {104, 122, 30}, },
            {{65, 107, -26}, {108, 108, 204}, {109, 122, 30}, },
            {{65, 100, -37}, {101, 101, 205}, {102, 122, 30}, },
            {{65, 113, -36}, {114, 114, 206}, {115, 122, 30}, },
            {{119, 119, 207}, },
            {},
            {{32, 93, -176}, },
            {},
            {{65, 97, -119}, {98, 98, 208}, {99, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 100, -37}, {101, 101, 209}, {102, 122, 30}, },
            {{65, 100, -37}, {101, 101, 210}, {102, 122, 30}, },
            {{65, 122, -23}, },
            {{32, 44, -184}, },
            {},
            {{65, 122, -23}, },
            {{65, 104, -31}, {105, 105, 211}, {106, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 122, -23}, },
            {{65, 113, -36}, {114, 114, 212}, {115, 122, 30}, },
            {{65, 122, -23}, },
            {{105, 105, 213}, },
            {{65, 107, -26}, {108, 108, 214}, {109, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 113, -36}, {114, 114, 215}, {115, 122, 30}, },
            {{65, 114, -89}, {115, 115, 216}, {116, 122, 30}, },
            {{65, 90, 21}, {97, 97, 217}, {98, 122, 30}, },
            {{115, 115, 218}, },
            {{65, 100, -37}, {101, 101, 219}, {102, 122, 30}, },
            {{65, 104, -31}, {105, 105, 220}, {106, 122, 30}, },
            {{65, 100, -37}, {101, 101, 221}, {102, 122, 30}, },
            {{65, 97, -119}, {98, 98, 222}, {99, 122, 30}, },
            {{101, 101, 223}, },
            {{65, 122, -23}, },
            {{65, 109, -40}, {110, 110, 224}, {111, 122, 30}, },
            {{65, 122, -23}, },
            {{65, 107, -26}, {108, 108, 225}, {109, 122, 30}, },
            {{32, 32, 226}, {99, 99, 227}, },
            {{65, 102, -117}, {103, 103, 228}, {104, 122, 30}, },
            {{65, 100, -37}, {101, 101, 229}, {102, 122, 30}, },
            {{32, 99, -225}, {100, 100, 230}, },
            {{111, 111, 231}, },
            {{65, 122, -23}, },
            {{65, 122, -23}, },
            {{101, 101, 232}, },
            {{109, 109, 233}, },
            {{99, 99, 234}, },
            {{97, 97, 235}, },
            {{95, 95, 236}, },
            {{110, 110, 237}, },
            {{115, 115, 238}, },
            {{100, 100, 239}, },
            {{101, 101, 240}, },
            {{111, 111, 241}, },
            {{109, 109, 242}, },
            {},
            {{95, 95, 243}, },
            {{99, 99, 244}, },
            {{97, 97, 245}, },
            {{115, 115, 246}, },
            {{97, 97, 247}, },
            {{109, 109, 248}, },
            {},
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {57, 50, 50, 50, 50, -1, -1, 22, -1, 44, 45, 20, 18, 16, 19, 17, 21, 59, 25, -1, 23, 57, 48, 49, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 46, 47, 50, -1, 28, -1, -1, 58, -1, -1, -1, -1, -1, 2, 26, 27, 24, -1, -1, 57, 57, 33, 43, 57, 57, 39, 57, 57, 57, 11, 35, 57, 55, 57, 30, 57, 57, 57, 57, 57, 57, 42, 57, 57, 57, 57, -1, 56, -1, 52, 52, -1, -1, -1, -1, -1, -1, 60, -1, -1, -1, 57, 32, 57, 57, 57, 57, 57, 57, 57, 57, 0, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 31, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, 52, -1, 52, 52, -1, -1, -1, -1, 53, -1, -1, 57, 57, 57, 36, 8, 57, 57, 57, 41, 57, 34, 57, 57, 1, 14, 57, 57, 57, 37, 57, 57, -1, 53, 52, -1, -1, 57, 57, 57, 57, -1, 62, 57, 57, 57, 57, 9, 57, 57, 57, 57, -1, 64, -1, 63, 57, 3, 57, 57, 10, -1, 61, 4, 57, 6, 5, 57, 7, -1, 57, 15, 57, 57, 57, -1, 57, 57, 57, 57, -1, 13, 57, 38, 57, -1, 57, 57, -1, -1, 40, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65, -1, -1, -1, -1, -1, -1, 66, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
