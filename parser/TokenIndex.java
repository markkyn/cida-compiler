/* This file was generated by SableCC (http://www.sablecc.org/). */

package cida.parser;

import cida.node.*;
import cida.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTIntT(@SuppressWarnings("unused") TIntT node)
    {
        this.index = 0;
    }

    @Override
    public void caseTRealT(@SuppressWarnings("unused") TRealT node)
    {
        this.index = 1;
    }

    @Override
    public void caseTRecebe(@SuppressWarnings("unused") TRecebe node)
    {
        this.index = 2;
    }

    @Override
    public void caseTAnswerT(@SuppressWarnings("unused") TAnswerT node)
    {
        this.index = 3;
    }

    @Override
    public void caseTNumberT(@SuppressWarnings("unused") TNumberT node)
    {
        this.index = 4;
    }

    @Override
    public void caseTSymbolT(@SuppressWarnings("unused") TSymbolT node)
    {
        this.index = 5;
    }

    @Override
    public void caseTStringT(@SuppressWarnings("unused") TStringT node)
    {
        this.index = 6;
    }

    @Override
    public void caseTVectorT(@SuppressWarnings("unused") TVectorT node)
    {
        this.index = 7;
    }

    @Override
    public void caseTCode(@SuppressWarnings("unused") TCode node)
    {
        this.index = 8;
    }

    @Override
    public void caseTStart(@SuppressWarnings("unused") TStart node)
    {
        this.index = 9;
    }

    @Override
    public void caseTFinish(@SuppressWarnings("unused") TFinish node)
    {
        this.index = 10;
    }

    @Override
    public void caseTIdentificador(@SuppressWarnings("unused") TIdentificador node)
    {
        this.index = 11;
    }

    @Override
    public void caseTUnalterable(@SuppressWarnings("unused") TUnalterable node)
    {
        this.index = 12;
    }

    @Override
    public void caseTAlterable(@SuppressWarnings("unused") TAlterable node)
    {
        this.index = 13;
    }

    @Override
    public void caseTShow(@SuppressWarnings("unused") TShow node)
    {
        this.index = 14;
    }

    @Override
    public void caseTCapture(@SuppressWarnings("unused") TCapture node)
    {
        this.index = 15;
    }

    @Override
    public void caseTVirgula(@SuppressWarnings("unused") TVirgula node)
    {
        this.index = 16;
    }

    @Override
    public void caseTPonto(@SuppressWarnings("unused") TPonto node)
    {
        this.index = 17;
    }

    @Override
    public void caseTAdd(@SuppressWarnings("unused") TAdd node)
    {
        this.index = 18;
    }

    @Override
    public void caseTSub(@SuppressWarnings("unused") TSub node)
    {
        this.index = 19;
    }

    @Override
    public void caseTMul(@SuppressWarnings("unused") TMul node)
    {
        this.index = 20;
    }

    @Override
    public void caseTDiv(@SuppressWarnings("unused") TDiv node)
    {
        this.index = 21;
    }

    @Override
    public void caseTMod(@SuppressWarnings("unused") TMod node)
    {
        this.index = 22;
    }

    @Override
    public void caseTMaior(@SuppressWarnings("unused") TMaior node)
    {
        this.index = 23;
    }

    @Override
    public void caseTMaiorIgual(@SuppressWarnings("unused") TMaiorIgual node)
    {
        this.index = 24;
    }

    @Override
    public void caseTMenor(@SuppressWarnings("unused") TMenor node)
    {
        this.index = 25;
    }

    @Override
    public void caseTMenorIgual(@SuppressWarnings("unused") TMenorIgual node)
    {
        this.index = 26;
    }

    @Override
    public void caseTIgualA(@SuppressWarnings("unused") TIgualA node)
    {
        this.index = 27;
    }

    @Override
    public void caseTDiferenteA(@SuppressWarnings("unused") TDiferenteA node)
    {
        this.index = 28;
    }

    @Override
    public void caseTNot(@SuppressWarnings("unused") TNot node)
    {
        this.index = 29;
    }

    @Override
    public void caseTOr(@SuppressWarnings("unused") TOr node)
    {
        this.index = 30;
    }

    @Override
    public void caseTXor(@SuppressWarnings("unused") TXor node)
    {
        this.index = 31;
    }

    @Override
    public void caseTAnd(@SuppressWarnings("unused") TAnd node)
    {
        this.index = 32;
    }

    @Override
    public void caseTAs(@SuppressWarnings("unused") TAs node)
    {
        this.index = 33;
    }

    @Override
    public void caseTLong(@SuppressWarnings("unused") TLong node)
    {
        this.index = 34;
    }

    @Override
    public void caseTIn(@SuppressWarnings("unused") TIn node)
    {
        this.index = 35;
    }

    @Override
    public void caseTCase(@SuppressWarnings("unused") TCase node)
    {
        this.index = 36;
    }

    @Override
    public void caseTThat(@SuppressWarnings("unused") TThat node)
    {
        this.index = 37;
    }

    @Override
    public void caseTOtherwise(@SuppressWarnings("unused") TOtherwise node)
    {
        this.index = 38;
    }

    @Override
    public void caseTDo(@SuppressWarnings("unused") TDo node)
    {
        this.index = 39;
    }

    @Override
    public void caseTConsidering(@SuppressWarnings("unused") TConsidering node)
    {
        this.index = 40;
    }

    @Override
    public void caseTFrom(@SuppressWarnings("unused") TFrom node)
    {
        this.index = 41;
    }

    @Override
    public void caseTTo(@SuppressWarnings("unused") TTo node)
    {
        this.index = 42;
    }

    @Override
    public void caseTBy(@SuppressWarnings("unused") TBy node)
    {
        this.index = 43;
    }

    @Override
    public void caseTParEsq(@SuppressWarnings("unused") TParEsq node)
    {
        this.index = 44;
    }

    @Override
    public void caseTParDir(@SuppressWarnings("unused") TParDir node)
    {
        this.index = 45;
    }

    @Override
    public void caseTChaveEsq(@SuppressWarnings("unused") TChaveEsq node)
    {
        this.index = 46;
    }

    @Override
    public void caseTChaveDir(@SuppressWarnings("unused") TChaveDir node)
    {
        this.index = 47;
    }

    @Override
    public void caseTBlocEsq(@SuppressWarnings("unused") TBlocEsq node)
    {
        this.index = 48;
    }

    @Override
    public void caseTBlocDir(@SuppressWarnings("unused") TBlocDir node)
    {
        this.index = 49;
    }

    @Override
    public void caseTEndCommand(@SuppressWarnings("unused") TEndCommand node)
    {
        this.index = 50;
    }

    @Override
    public void caseTCommentBlock(@SuppressWarnings("unused") TCommentBlock node)
    {
        this.index = 51;
    }

    @Override
    public void caseTTrue(@SuppressWarnings("unused") TTrue node)
    {
        this.index = 52;
    }

    @Override
    public void caseTFalse(@SuppressWarnings("unused") TFalse node)
    {
        this.index = 53;
    }

    @Override
    public void caseTSymbol(@SuppressWarnings("unused") TSymbol node)
    {
        this.index = 54;
    }

    @Override
    public void caseTId(@SuppressWarnings("unused") TId node)
    {
        this.index = 55;
    }

    @Override
    public void caseTString(@SuppressWarnings("unused") TString node)
    {
        this.index = 56;
    }

    @Override
    public void caseTInteiro(@SuppressWarnings("unused") TInteiro node)
    {
        this.index = 57;
    }

    @Override
    public void caseTReal(@SuppressWarnings("unused") TReal node)
    {
        this.index = 58;
    }

    @Override
    public void caseTAuxLocalVirgula(@SuppressWarnings("unused") TAuxLocalVirgula node)
    {
        this.index = 59;
    }

    @Override
    public void caseTAuxExprVirgula(@SuppressWarnings("unused") TAuxExprVirgula node)
    {
        this.index = 60;
    }

    @Override
    public void caseTAuxBlocExprBloc(@SuppressWarnings("unused") TAuxBlocExprBloc node)
    {
        this.index = 61;
    }

    @Override
    public void caseTAuxRecbeExpr(@SuppressWarnings("unused") TAuxRecbeExpr node)
    {
        this.index = 62;
    }

    @Override
    public void caseTAuxOtherwiseDecCasam(@SuppressWarnings("unused") TAuxOtherwiseDecCasam node)
    {
        this.index = 63;
    }

    @Override
    public void caseTAuxOtherwiseDecSemCasam(@SuppressWarnings("unused") TAuxOtherwiseDecSemCasam node)
    {
        this.index = 64;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 65;
    }
}
